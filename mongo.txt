createing database
 use userdb;

creating collection
  db.createCollection('user')
  type of collections
    a. capped collection
    b. uncapped collection

Inserting document/record in collection
 db.user.insert({name:"ABC",age:24,bg: 'a+'});   
 db.user.insertMany([
   {
     name:"B",
     age: 26,
     bg: 'a-'
   },
   {
     name:"C",
     age: 30,
     bg: 'o+'
   },
   {
     name:"D",
     age: 22,
     bg: 'o-'
   },
   {
     name:"C",
     age: 29,
     bg: 'ab+'
   },
   {
     name:"F",
     age: 29,
     bg: 'b+'
   }
 ]);   
 -------------------------------------------------------------------------
 Fetch/Select
// select * from user;
 db.user.find()
 
 db.user.find({},{name:1, age:1});

Filtering record :-
  $gt(>), $lt(<), $gte(>=), $lte(<=), $eq(=),$ne
  $and, $or
 db.user.find({age: {$gt:25}}) 
 db.user.find({
    $and:[{age:{$gt:25}},{age:{$lt:30}}]
 }) 
 db.user.find({age:{$eq:30}})   
 db.user.find({
   age: db.user.find().sort({age:-1}).toArray()[0].age
 })   
 db.user.find({
   age:{$lt: db.user.find().sort({age:-1}).toArray()[0].age}
 }).sort({age:-1}).toArray()[0].age   
 
 db.user.find({
  age: db.user.find({
   age:{$lt: db.user.find().sort({age:-1}).toArray()[0].age}
 }).sort({age:-1}).toArray()[0].age
 })    
 -----------------------------------------------------------------------
 Reference key
 Embedded Document
 
 db.category.insertMany([
 {
    categoryName: 'A'
 },
 {
    categoryName: 'B'
 },
 {
    categoryName: 'C'
 }
])
db.product.insertMany([
{
   name: 'P1',
   categoryName: 'A'
},
{
   name: 'P2',
   categoryName: 'A'
},
{
   name: 'P3',
   categoryName: 'B'
},
{
   name: 'P4',
   categoryName: 'B'
},
{
   name: 'P5',
   categoryName: 'C'
},
{
   name: 'P6',
   categoryName: 'C'
},
{
   name: 'P7',
   categoryName: 'A'
},
{
   name: 'P8',
   categoryName: 'A'
},
{
   name: 'P9',
   categoryName: 'B'
}
]);
-------------------------------------------------
db.category.aggregate([
 {
    $lookup:{
       from: 'product',
       localField: 'categoryName',
       foreignField: 'categoryName',
       as: 'productList'
    }
 },{
   $match:{
     categoryName: 'A'
   }
 },{
   $project:{_id:0,'productList._id':0,'productList.categoryName':0}
 }
]);
---------------------------------
db.user.update({
   age:{$gt: 25}
},{
  $set:{bg: 'a-',name: 'cheeku'}
},{multi: true})
db.user.update({},{$pull:{salary:1}})
-----------------------------------------------------------
express Application + mongoose + mongodb
npm install mongoose










 
 
    
    
    
